create table "public"."departments" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "title" text
);


alter table "public"."departments" enable row level security;

create table "public"."event_attendees" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "student_id" uuid default gen_random_uuid(),
    "event_id" uuid default gen_random_uuid()
);


alter table "public"."event_attendees" enable row level security;

create table "public"."event_departments" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "department_id" uuid default gen_random_uuid(),
    "event_id" uuid default gen_random_uuid()
);


alter table "public"."event_departments" enable row level security;

create table "public"."events" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "title" text,
    "description" text,
    "ticketFee" numeric,
    "open_to_all" boolean default true,
    "event_date" timestamp with time zone,
    "cover_image" text,
    "location" text
);


alter table "public"."events" enable row level security;

create table "public"."payments" (
    "user_id" uuid not null,
    "event_id" uuid not null,
    "amount" numeric not null,
    "status" text not null,
    "created_at" timestamp with time zone default now(),
    "tx_ref" text not null,
    "transaction_id" text,
    "flw_ref" text,
    "id" uuid not null default gen_random_uuid()
);


alter table "public"."payments" enable row level security;

create table "public"."students" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "email" text,
    "department" text,
    "matricNumber" text,
    "profile_completed" boolean default false,
    "user_id" uuid
);


alter table "public"."students" enable row level security;

create table "public"."tickets" (
    "event_id" uuid not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone default now(),
    "id" uuid not null default gen_random_uuid(),
    "tx_ref" text
);


alter table "public"."tickets" enable row level security;

CREATE UNIQUE INDEX departments_pkey ON public.departments USING btree (id);

CREATE UNIQUE INDEX event_attendees_pkey ON public.event_attendees USING btree (id);

CREATE UNIQUE INDEX event_departments_pkey ON public.event_departments USING btree (id);

CREATE UNIQUE INDEX events_pkey ON public.events USING btree (id);

CREATE INDEX payments_event_id_idx ON public.payments USING btree (event_id);

CREATE UNIQUE INDEX payments_pkey ON public.payments USING btree (id, tx_ref);

CREATE UNIQUE INDEX payments_tx_ref_key ON public.payments USING btree (tx_ref);

CREATE INDEX payments_user_id_idx ON public.payments USING btree (user_id);

CREATE UNIQUE INDEX students_email_key ON public.students USING btree (email);

CREATE UNIQUE INDEX "students_matricNumber_key" ON public.students USING btree ("matricNumber");

CREATE UNIQUE INDEX students_pkey ON public.students USING btree (id);

CREATE INDEX tickets_event_id_idx ON public.tickets USING btree (event_id);

CREATE UNIQUE INDEX tickets_tx_ref_key ON public.tickets USING btree (tx_ref);

CREATE INDEX tickets_user_id_idx ON public.tickets USING btree (user_id);

alter table "public"."departments" add constraint "departments_pkey" PRIMARY KEY using index "departments_pkey";

alter table "public"."event_attendees" add constraint "event_attendees_pkey" PRIMARY KEY using index "event_attendees_pkey";

alter table "public"."event_departments" add constraint "event_departments_pkey" PRIMARY KEY using index "event_departments_pkey";

alter table "public"."events" add constraint "events_pkey" PRIMARY KEY using index "events_pkey";

alter table "public"."payments" add constraint "payments_pkey" PRIMARY KEY using index "payments_pkey";

alter table "public"."students" add constraint "students_pkey" PRIMARY KEY using index "students_pkey";

alter table "public"."event_attendees" add constraint "event_attendees_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."event_attendees" validate constraint "event_attendees_event_id_fkey";

alter table "public"."event_attendees" add constraint "event_attendees_student_id_fkey" FOREIGN KEY (student_id) REFERENCES students(id) not valid;

alter table "public"."event_attendees" validate constraint "event_attendees_student_id_fkey";

alter table "public"."event_departments" add constraint "event_departments_department_id_fkey" FOREIGN KEY (department_id) REFERENCES departments(id) not valid;

alter table "public"."event_departments" validate constraint "event_departments_department_id_fkey";

alter table "public"."event_departments" add constraint "event_departments_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."event_departments" validate constraint "event_departments_event_id_fkey";

alter table "public"."payments" add constraint "payments_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."payments" validate constraint "payments_event_id_fkey";

alter table "public"."payments" add constraint "payments_tx_ref_key" UNIQUE using index "payments_tx_ref_key";

alter table "public"."payments" add constraint "payments_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."payments" validate constraint "payments_user_id_fkey";

alter table "public"."students" add constraint "students_email_key" UNIQUE using index "students_email_key";

alter table "public"."students" add constraint "students_matricNumber_key" UNIQUE using index "students_matricNumber_key";

alter table "public"."tickets" add constraint "tickets_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(id) not valid;

alter table "public"."tickets" validate constraint "tickets_event_id_fkey";

alter table "public"."tickets" add constraint "tickets_tx_ref_fkey" FOREIGN KEY (tx_ref) REFERENCES payments(tx_ref) not valid;

alter table "public"."tickets" validate constraint "tickets_tx_ref_fkey";

alter table "public"."tickets" add constraint "tickets_tx_ref_key" UNIQUE using index "tickets_tx_ref_key";

alter table "public"."tickets" add constraint "tickets_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."tickets" validate constraint "tickets_user_id_fkey";

grant delete on table "public"."departments" to "anon";

grant insert on table "public"."departments" to "anon";

grant references on table "public"."departments" to "anon";

grant select on table "public"."departments" to "anon";

grant trigger on table "public"."departments" to "anon";

grant truncate on table "public"."departments" to "anon";

grant update on table "public"."departments" to "anon";

grant delete on table "public"."departments" to "authenticated";

grant insert on table "public"."departments" to "authenticated";

grant references on table "public"."departments" to "authenticated";

grant select on table "public"."departments" to "authenticated";

grant trigger on table "public"."departments" to "authenticated";

grant truncate on table "public"."departments" to "authenticated";

grant update on table "public"."departments" to "authenticated";

grant delete on table "public"."departments" to "service_role";

grant insert on table "public"."departments" to "service_role";

grant references on table "public"."departments" to "service_role";

grant select on table "public"."departments" to "service_role";

grant trigger on table "public"."departments" to "service_role";

grant truncate on table "public"."departments" to "service_role";

grant update on table "public"."departments" to "service_role";

grant delete on table "public"."event_attendees" to "anon";

grant insert on table "public"."event_attendees" to "anon";

grant references on table "public"."event_attendees" to "anon";

grant select on table "public"."event_attendees" to "anon";

grant trigger on table "public"."event_attendees" to "anon";

grant truncate on table "public"."event_attendees" to "anon";

grant update on table "public"."event_attendees" to "anon";

grant delete on table "public"."event_attendees" to "authenticated";

grant insert on table "public"."event_attendees" to "authenticated";

grant references on table "public"."event_attendees" to "authenticated";

grant select on table "public"."event_attendees" to "authenticated";

grant trigger on table "public"."event_attendees" to "authenticated";

grant truncate on table "public"."event_attendees" to "authenticated";

grant update on table "public"."event_attendees" to "authenticated";

grant delete on table "public"."event_attendees" to "service_role";

grant insert on table "public"."event_attendees" to "service_role";

grant references on table "public"."event_attendees" to "service_role";

grant select on table "public"."event_attendees" to "service_role";

grant trigger on table "public"."event_attendees" to "service_role";

grant truncate on table "public"."event_attendees" to "service_role";

grant update on table "public"."event_attendees" to "service_role";

grant delete on table "public"."event_departments" to "anon";

grant insert on table "public"."event_departments" to "anon";

grant references on table "public"."event_departments" to "anon";

grant select on table "public"."event_departments" to "anon";

grant trigger on table "public"."event_departments" to "anon";

grant truncate on table "public"."event_departments" to "anon";

grant update on table "public"."event_departments" to "anon";

grant delete on table "public"."event_departments" to "authenticated";

grant insert on table "public"."event_departments" to "authenticated";

grant references on table "public"."event_departments" to "authenticated";

grant select on table "public"."event_departments" to "authenticated";

grant trigger on table "public"."event_departments" to "authenticated";

grant truncate on table "public"."event_departments" to "authenticated";

grant update on table "public"."event_departments" to "authenticated";

grant delete on table "public"."event_departments" to "service_role";

grant insert on table "public"."event_departments" to "service_role";

grant references on table "public"."event_departments" to "service_role";

grant select on table "public"."event_departments" to "service_role";

grant trigger on table "public"."event_departments" to "service_role";

grant truncate on table "public"."event_departments" to "service_role";

grant update on table "public"."event_departments" to "service_role";

grant delete on table "public"."events" to "anon";

grant insert on table "public"."events" to "anon";

grant references on table "public"."events" to "anon";

grant select on table "public"."events" to "anon";

grant trigger on table "public"."events" to "anon";

grant truncate on table "public"."events" to "anon";

grant update on table "public"."events" to "anon";

grant delete on table "public"."events" to "authenticated";

grant insert on table "public"."events" to "authenticated";

grant references on table "public"."events" to "authenticated";

grant select on table "public"."events" to "authenticated";

grant trigger on table "public"."events" to "authenticated";

grant truncate on table "public"."events" to "authenticated";

grant update on table "public"."events" to "authenticated";

grant delete on table "public"."events" to "service_role";

grant insert on table "public"."events" to "service_role";

grant references on table "public"."events" to "service_role";

grant select on table "public"."events" to "service_role";

grant trigger on table "public"."events" to "service_role";

grant truncate on table "public"."events" to "service_role";

grant update on table "public"."events" to "service_role";

grant delete on table "public"."payments" to "anon";

grant insert on table "public"."payments" to "anon";

grant references on table "public"."payments" to "anon";

grant select on table "public"."payments" to "anon";

grant trigger on table "public"."payments" to "anon";

grant truncate on table "public"."payments" to "anon";

grant update on table "public"."payments" to "anon";

grant delete on table "public"."payments" to "authenticated";

grant insert on table "public"."payments" to "authenticated";

grant references on table "public"."payments" to "authenticated";

grant select on table "public"."payments" to "authenticated";

grant trigger on table "public"."payments" to "authenticated";

grant truncate on table "public"."payments" to "authenticated";

grant update on table "public"."payments" to "authenticated";

grant delete on table "public"."payments" to "service_role";

grant insert on table "public"."payments" to "service_role";

grant references on table "public"."payments" to "service_role";

grant select on table "public"."payments" to "service_role";

grant trigger on table "public"."payments" to "service_role";

grant truncate on table "public"."payments" to "service_role";

grant update on table "public"."payments" to "service_role";

grant delete on table "public"."students" to "anon";

grant insert on table "public"."students" to "anon";

grant references on table "public"."students" to "anon";

grant select on table "public"."students" to "anon";

grant trigger on table "public"."students" to "anon";

grant truncate on table "public"."students" to "anon";

grant update on table "public"."students" to "anon";

grant delete on table "public"."students" to "authenticated";

grant insert on table "public"."students" to "authenticated";

grant references on table "public"."students" to "authenticated";

grant select on table "public"."students" to "authenticated";

grant trigger on table "public"."students" to "authenticated";

grant truncate on table "public"."students" to "authenticated";

grant update on table "public"."students" to "authenticated";

grant delete on table "public"."students" to "service_role";

grant insert on table "public"."students" to "service_role";

grant references on table "public"."students" to "service_role";

grant select on table "public"."students" to "service_role";

grant trigger on table "public"."students" to "service_role";

grant truncate on table "public"."students" to "service_role";

grant update on table "public"."students" to "service_role";

grant delete on table "public"."tickets" to "anon";

grant insert on table "public"."tickets" to "anon";

grant references on table "public"."tickets" to "anon";

grant select on table "public"."tickets" to "anon";

grant trigger on table "public"."tickets" to "anon";

grant truncate on table "public"."tickets" to "anon";

grant update on table "public"."tickets" to "anon";

grant delete on table "public"."tickets" to "authenticated";

grant insert on table "public"."tickets" to "authenticated";

grant references on table "public"."tickets" to "authenticated";

grant select on table "public"."tickets" to "authenticated";

grant trigger on table "public"."tickets" to "authenticated";

grant truncate on table "public"."tickets" to "authenticated";

grant update on table "public"."tickets" to "authenticated";

grant delete on table "public"."tickets" to "service_role";

grant insert on table "public"."tickets" to "service_role";

grant references on table "public"."tickets" to "service_role";

grant select on table "public"."tickets" to "service_role";

grant trigger on table "public"."tickets" to "service_role";

grant truncate on table "public"."tickets" to "service_role";

grant update on table "public"."tickets" to "service_role";

create policy "Enable read access for all users"
on "public"."departments"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."event_attendees"
as permissive
for select
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."event_departments"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."events"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."payments"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for authenticated users"
on "public"."payments"
as permissive
for select
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."students"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."students"
as permissive
for select
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."tickets"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."tickets"
as permissive
for select
to authenticated
using (true);



